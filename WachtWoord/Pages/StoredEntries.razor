@page "/StoredEntries"
@using WachtWoord.Models.Services
@using WachtWoord.Pages.StoredEntriesComponents
<div class="overflow-hidden h-screen">
    <div class="flex flex-wrap w-full">
        <div class="w-1/5">
            <div class="bg-zinc-100 rounded-lg p-2 mt-2 mr-2 mb-2 h-10 cursor-pointer ">
                <div class="flex flex-col">
                    <span class="text-lg font-bold text-zinc-600">Create</span>
                </div>
            </div>
        </div>

        <div class="w-1/5">
            <div class="bg-zinc-100 rounded-lg p-2 mt-2 mr-2 mb-2  h-10 cursor-pointer ">
                <div class="flex flex-col">
                    <span class="text-lg font-bold text-zinc-600">Update</span>
                </div>
            </div>
        </div>

        <div class="w-1/5">
            <div class="bg-zinc-100 rounded-lg p-2 mt-2 mr-2 mb-2  h-10 cursor-pointer ">
                <div class="flex flex-col">
                    <span class="text-lg font-bold text-zinc-600">Delete</span>
                </div>
            </div>
        </div>
    </div>

    <input class="appearance-none border rounded py-1 px-2 text-gray-700 mb-3 leading-tight focus:outline-blue-200" type="text" @oninput="@((e) => OnSearchInput((string)e.Value))" placeholder="Search" />
    <EntryTable allEntries="@allEntries"/>
</div>

@code {
    private List<Entry> allEntries = new List<Entry>();
    private readonly EntryService _entryService = new();

    protected override void OnInitialized()
    {
        allEntries = _entryService.GetAllEntries();
    }

    void OnSearchInput(string searchQuery)
    {
        allEntries = _entryService.GetAllEntries();
        if(!string.IsNullOrEmpty(searchQuery))
        {
            allEntries = allEntries.Where(e => e.Title.ToLower().Contains(searchQuery.ToLower())).ToList();
        }
    }
}
