@page "/details/{Id:int}"
@using WachtWoord.Models.Services

<div class=" w-full">
    <div disabled=@IsLoading class="@(IsLoading ? "cursor-wait" : "") grid h-screen place-items-center">
        <div class="items-center w-1/3">
            <EditForm EditContext="@editContext" class="bg-neutral-700 shadow-md rounded-md px-8 pt-6 pb-8 mb-4" OnSubmit="@HandleSubmit">
                <div class="mb-4">
                    <h1 class="text-xl font-bold text-zinc-50 mb-2">Entry Details</h1>
                    <label class="block text-zinc-100 text-sm font-semibold mb-2" for="title">
                        Title
                    </label>
                    <input required @bind-value="entry.Title" class="shadow appearance-none border rounded w-full py-2 px-3 text-zinc-800 mb-3 leading-tight focus:outline-none focus:shadow-outline" id="title" type="text">

                    <label class="block text-zinc-100 text-sm font-semibold mb-2" for="username">
                        Username
                    </label>
                    <input @bind-value="entry.Username" class="shadow appearance-none border rounded w-full py-2 px-3 text-zinc-800 mb-3 leading-tight focus:outline-none focus:shadow-outline" id="username" type="text">

                    <label class="block text-zinc-100 text-sm font-semibold mb-2" for="Url">
                        URL
                    </label>
                    <input @bind-value="entry.URL" class="shadow appearance-none border rounded w-full py-2 px-3 text-zinc-800 mb-3 leading-tight focus:outline-none focus:shadow-outline" id="url" type="text">

                    <label class="block text-zinc-100 text-sm font-semibold mb-2" for="password">
                        Password
                    </label>
                    <input @bind-value="entry.Password" type="@(ShowPassword ? "text" : "password")" class="shadow appearance-none border rounded w-full py-2 px-3 text-zinc-800 mb-3 leading-tight focus:outline-none focus:shadow-outline" id="password" />
                    <span @onclick="OnShowPasswordClick" class="text-zinc-100">
                        <input type="checkbox" @bind="ShowPassword"/>
                        <label class="text-sm">
                            Show password
                        </label>
                    </span>
                </div>
                <button type="submit" class="@(IsLoading ? "cursor-wait" : "") w-full bg-green-600 hover:bg-indigo-400 text-zinc-50 focus:outline-indigo-700 font-semibold uppercase py-2 px-4 rounded focus:shadow-outline">
                    @if (IsLoading)
                    {
                        <span>Updating Password</span>
                    }
                    else
                    {
                        <span>Update Password</span>
                    }
                </button>
            </EditForm>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int Id { get; set; }
    public Entry entry { get; set; }
    private readonly EntryService _entryService = new();
    private EditContext editContext;
    private bool IsLoading = false;
    private bool IsEditable = false;
    private bool ShowPassword = false;


    protected override async Task OnInitializedAsync()
    {
        entry = await _entryService.GetEntry(Id);
        editContext = new(entry);
    }

    private void OnShowPasswordClick()
    {
        ShowPassword = !ShowPassword;
    }

    private async void HandleSubmit()
    {
        if (IsLoading) return;
        IsLoading = true;
        StateHasChanged();
        await Task.Delay(1);

        try
        {
            if (editContext != null && editContext.Validate())
            {
                _entryService.UpdateEntry(Id, entry);
            }
        }
        finally
        {
            IsLoading = false;
            StateHasChanged();
        }
    }
}
