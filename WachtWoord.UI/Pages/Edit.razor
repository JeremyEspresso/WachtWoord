@page "/Edit/{Id:int}"
@using WachtWoord.Logic.PasswordGenerator
@using WachtWoord.Logic.Abstractions
@using WachtWoord.Logic.Services

@inject NavigationManager NavigationManager


<div class="w-full">
    <div disabled=@IsLoading class="@(IsLoading ? "cursor-wait" : "") grid h-screen place-items-center">
        <div class="items-center w-1/3">
            <EditForm EditContext="@editContext" class="bg-neutral-700 shadow-md rounded-md px-8 pt-6 pb-8 mb-4" OnSubmit="@HandleSubmit">
                <div class="mb-4">
                    <h1 class="text-xl font-bold text-zinc-50 mb-2">Editing Password <span class="text-violet-400">@entry.Id</span></h1>

                    <label class="block text-zinc-100 text-sm font-semibold mb-2" for="title">
                        Title <span class="text-zinc-400 text-sm font-normal">*</span>
                    </label>
                    <input required @bind-value="entry.Title" class="shadow appearance-none border rounded w-full py-2 px-3 text-zinc-800 mb-3 leading-tight focus:outline-none focus:shadow-outline" id="title" type="text">

                    <label class="block text-zinc-100 text-sm font-semibold mb-2" for="username">
                        Username <span class="text-zinc-400 text-sm font-light italic">(opt.)</span>
                    </label>
                    <input @bind-value="entry.Username" class="shadow appearance-none border rounded w-full py-2 px-3 text-zinc-800 mb-3 leading-tight focus:outline-none focus:shadow-outline" id="username" type="text">

                    <label class="block text-zinc-100 text-sm font-semibold mb-2" for="Url">
                        URL <span class="text-zinc-400 text-sm font-light italic">(opt.)</span>
                    </label>
                    <input @bind-value="entry.URL" class="shadow appearance-none border rounded w-full py-2 px-3 text-zinc-800 mb-3 leading-tight focus:outline-none focus:shadow-outline" id="url" type="text">

                    <label class="block text-zinc-100 text-sm font-semibold mb-2" for="Url">
                        Password
                    </label>
                    <div class="relative">
                        <input @bind-value="entry.Password" type="@(ShowPassword ? "text" : "password")" id="password" class="block mb-0 shadow appearance-none border rounded w-full py-2 px-4 text-zinc-800 mb-3 leading-tight focus:outline-none focus:shadow-outline" placeholder="Search" required>
                        <span @onclick="OnChangePasswordClick" title="Change password" style="bottom:0px; right:-1px; padding: 9px 9.5px 9px;" tab-index="-1" class="absolute bg-violet-600 hover:bg-violet-500 rounded-r text-zinc-50 font-semibold leading-tight">
                            <i class="fa-solid fa-recycle fa-lg"></i>
                        </span>
                    </div>

                    <input type="checkbox" @bind-value="ShowPassword" />
                    <label class="text-sm text-zinc-300" for="password">
                        Show password
                    </label>

                    <button type="submit" class="@(IsLoading ? "cursor-wait" : "") mb-2 w-full bg-violet-600 hover:bg-violet-500 text-zinc-50 focus:outline-indigo-700 font-semibold uppercase py-2 px-4 rounded focus:shadow-outline">
                        @if (IsLoading)
                        {
                            <span>Editing Password</span>
                        }
                        else
                        {
                            <span>Confirm Changes</span>
                        }
                    </button>

                    <div class="flex flex-col" @onclick="OnDeleteEntryClick">
                        <span tabindex="-1" class="hover:cursor-pointer text-center w-full bg-red-600 hover:bg-red-500 text-zinc-50 focus:outline-indigo-700 font-semibold uppercase py-2 px-4 rounded focus:shadow-outline">
                            Delete Entry
                        </span>
                    </div>

                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int Id { get; set; }
    public Entry entry { get; set; }
    private readonly IEntryService _entryService = new EntryService();
    private readonly IHistoryService _historyService = new HistoryService();
    private EditContext? editContext;
    private bool IsLoading = false;
    private bool ShowPassword = false;
    private bool ChangedPassword = false;

    protected async override void OnInitialized()
    {
        entry = await _entryService.GetEntry(Id);
        editContext = new(entry);
    }

    private async void HandleSubmit()
    {
        if (IsLoading) return;
        IsLoading = true;
        StateHasChanged();
        await Task.Delay(1);

        try
        {
            if (editContext != null && editContext.Validate())
            {
                //_historyService.AddHistory(entry.Password, entry);
                if (ChangedPassword) _historyService.AddHistory(entry.Password, entry);
                await _entryService.UpdateEntry(Id, entry);
                NavigationManager.NavigateTo("/Entries");
            }
        }
        finally
        {
            IsLoading = false;
        }
    }

    private void OnChangePasswordClick()
    {
        PWGenerator passwordGenerator = new(entry.Password.Length);
        entry.Password = passwordGenerator.GeneratePassword();
        ChangedPassword = true;
        StateHasChanged();
    }
    
    private async void OnDeleteEntryClick()
    {
        await _entryService.DeleteEntry(entry.Id);
        NavigationManager.NavigateTo("/Entries");
    }
}


